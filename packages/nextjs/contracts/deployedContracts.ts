/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  4157: {
    AccessRestriction: {
      address: "0xc510984C0084bC914aEE674afee6Cf43144CA08d",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_deployer",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "ContractNotPaused",
          type: "error",
        },
        {
          inputs: [],
          name: "ContractPaused",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "available",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "required",
              type: "uint256",
            },
          ],
          name: "InsufficientBalance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "field",
              type: "string",
            },
          ],
          name: "InvalidAddress",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "param",
              type: "string",
            },
          ],
          name: "MustBeGraterThanZero",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotAdmin",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotAdminOrApprovedContract",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotAdminOrOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotAdminOrScript",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotApprovedContract",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotArbiter",
          type: "error",
        },
        {
          inputs: [],
          name: "NotAuthorized",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotDAO",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotScript",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotVerifiedUser",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "Paused",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "bytes32",
              name: "previousAdminRole",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "bytes32",
              name: "newAdminRole",
              type: "bytes32",
            },
          ],
          name: "RoleAdminChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "sender",
              type: "address",
            },
          ],
          name: "RoleGranted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "sender",
              type: "address",
            },
          ],
          name: "RoleRevoked",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "Unpaused",
          type: "event",
        },
        {
          inputs: [],
          name: "ADMIN_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "APPROVED_CONTRACT_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "ARBITER_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "DAO_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "DEFAULT_ADMIN_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "SCRIPT_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "VERFIED_USER_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
          ],
          name: "getRoleAdmin",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "grantRole",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "hasRole",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "ifAdmin",
          outputs: [],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "ifAdminOrApprovedContract",
          outputs: [],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "ifAdminOrScript",
          outputs: [],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "ifApprovedContract",
          outputs: [],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "ifArbiter",
          outputs: [],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "ifDAO",
          outputs: [],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "ifNotPaused",
          outputs: [],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "ifOwner",
          outputs: [],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "ifOwnerOrAdmin",
          outputs: [],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "ifPaused",
          outputs: [],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "ifScript",
          outputs: [],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "ifVerifiedUser",
          outputs: [],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "isAdmin",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "isApprovedContract",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "isArbiter",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "isDAO",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "isOwner",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "isScript",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "isVerifiedUser",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "pause",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "paused",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "renounceRole",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "revokeRole",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "interfaceId",
              type: "bytes4",
            },
          ],
          name: "supportsInterface",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "unpause",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        DEFAULT_ADMIN_ROLE: "@openzeppelin/contracts/access/AccessControl.sol",
        getRoleAdmin: "contracts/interfaces/IAccessRestriction.sol",
        grantRole: "contracts/interfaces/IAccessRestriction.sol",
        hasRole: "contracts/interfaces/IAccessRestriction.sol",
        renounceRole: "contracts/interfaces/IAccessRestriction.sol",
        revokeRole: "contracts/interfaces/IAccessRestriction.sol",
        supportsInterface: "@openzeppelin/contracts/access/AccessControl.sol",
        paused: "contracts/interfaces/IAccessRestriction.sol",
        ifAdmin: "contracts/interfaces/IAccessRestriction.sol",
        ifAdminOrApprovedContract:
          "contracts/interfaces/IAccessRestriction.sol",
        ifAdminOrScript: "contracts/interfaces/IAccessRestriction.sol",
        ifApprovedContract: "contracts/interfaces/IAccessRestriction.sol",
        ifArbiter: "contracts/interfaces/IAccessRestriction.sol",
        ifDAO: "contracts/interfaces/IAccessRestriction.sol",
        ifDistributor: "contracts/interfaces/IAccessRestriction.sol",
        ifNotPaused: "contracts/interfaces/IAccessRestriction.sol",
        ifOwner: "contracts/interfaces/IAccessRestriction.sol",
        ifOwnerOrAdmin: "contracts/interfaces/IAccessRestriction.sol",
        ifPaused: "contracts/interfaces/IAccessRestriction.sol",
        ifScript: "contracts/interfaces/IAccessRestriction.sol",
        ifVerifiedUser: "contracts/interfaces/IAccessRestriction.sol",
        isAdmin: "contracts/interfaces/IAccessRestriction.sol",
        isApprovedContract: "contracts/interfaces/IAccessRestriction.sol",
        isArbiter: "contracts/interfaces/IAccessRestriction.sol",
        isDAO: "contracts/interfaces/IAccessRestriction.sol",
        isDistributor: "contracts/interfaces/IAccessRestriction.sol",
        isOwner: "contracts/interfaces/IAccessRestriction.sol",
        isScript: "contracts/interfaces/IAccessRestriction.sol",
        isVerifiedUser: "contracts/interfaces/IAccessRestriction.sol",
        pause: "contracts/interfaces/IAccessRestriction.sol",
        unpause: "contracts/interfaces/IAccessRestriction.sol",
      },
    },
    Reputation: {
      address: "0xd24F2a43dAFFF634Fe435e3239236C0c71a9C3F3",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_accessRestriction",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "available",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "required",
              type: "uint256",
            },
          ],
          name: "InsufficientBalance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "field",
              type: "string",
            },
          ],
          name: "InvalidAddress",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "updater",
              type: "address",
            },
          ],
          name: "InvalidUpdaterAddress",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "param",
              type: "string",
            },
          ],
          name: "MustBeGraterThanZero",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotAdmin",
          type: "error",
        },
        {
          inputs: [],
          name: "NotAuthorized",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotOwner",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "agreementId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "int256",
              name: "change",
              type: "int256",
            },
            {
              indexed: false,
              internalType: "int256",
              name: "newScore",
              type: "int256",
            },
          ],
          name: "ReputationUpdated",
          type: "event",
        },
        {
          inputs: [],
          name: "UPDATER_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "accessRestriction",
          outputs: [
            {
              internalType: "contract IAccessRestriction",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
          name: "getReputation",
          outputs: [
            {
              internalType: "int256",
              name: "",
              type: "int256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "reputationScores",
          outputs: [
            {
              internalType: "int256",
              name: "",
              type: "int256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_agreementId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
            {
              internalType: "int256",
              name: "_change",
              type: "int256",
            },
          ],
          name: "updateReputation",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        getReputation: "contracts/interfaces/IReputation.sol",
        updateReputation: "contracts/interfaces/IReputation.sol",
      },
    },
  },
  31337: {
    AccessRestriction: {
      address: "0xc6e7DF5E7b4f2A278906862b61205850344D4e7d",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_deployer",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "ContractNotPaused",
          type: "error",
        },
        {
          inputs: [],
          name: "ContractPaused",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "available",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "required",
              type: "uint256",
            },
          ],
          name: "InsufficientBalance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "field",
              type: "string",
            },
          ],
          name: "InvalidAddress",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "param",
              type: "string",
            },
          ],
          name: "MustBeGraterThanZero",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotAdmin",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotAdminOrApprovedContract",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotAdminOrOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotAdminOrScript",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotApprovedContract",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotArbiter",
          type: "error",
        },
        {
          inputs: [],
          name: "NotAuthorized",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotDAO",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotDistributor",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotScript",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotVerifiedUser",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "Paused",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "bytes32",
              name: "previousAdminRole",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "bytes32",
              name: "newAdminRole",
              type: "bytes32",
            },
          ],
          name: "RoleAdminChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "sender",
              type: "address",
            },
          ],
          name: "RoleGranted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "sender",
              type: "address",
            },
          ],
          name: "RoleRevoked",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "Unpaused",
          type: "event",
        },
        {
          inputs: [],
          name: "ADMIN_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "APPROVED_CONTRACT_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "ARBITER_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "DAO_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "DEFAULT_ADMIN_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "DISTRIBUTOR_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "SCRIPT_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "VERFIED_USER_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
          ],
          name: "getRoleAdmin",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "grantRole",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "hasRole",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "ifAdmin",
          outputs: [],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "ifAdminOrApprovedContract",
          outputs: [],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "ifAdminOrScript",
          outputs: [],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "ifApprovedContract",
          outputs: [],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "ifArbiter",
          outputs: [],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "ifDAO",
          outputs: [],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "ifDistributor",
          outputs: [],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "ifNotPaused",
          outputs: [],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "ifOwner",
          outputs: [],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "ifOwnerOrAdmin",
          outputs: [],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "ifPaused",
          outputs: [],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "ifScript",
          outputs: [],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "ifVerifiedUser",
          outputs: [],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "isAdmin",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "isApprovedContract",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "isArbiter",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "isDAO",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "isDistributor",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "isOwner",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "isScript",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "isVerifiedUser",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "pause",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "paused",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "renounceRole",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "role",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "revokeRole",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "interfaceId",
              type: "bytes4",
            },
          ],
          name: "supportsInterface",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "unpause",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        DEFAULT_ADMIN_ROLE: "@openzeppelin/contracts/access/AccessControl.sol",
        getRoleAdmin: "contracts/interfaces/IAccessRestriction.sol",
        grantRole: "contracts/interfaces/IAccessRestriction.sol",
        hasRole: "contracts/interfaces/IAccessRestriction.sol",
        renounceRole: "contracts/interfaces/IAccessRestriction.sol",
        revokeRole: "contracts/interfaces/IAccessRestriction.sol",
        supportsInterface: "@openzeppelin/contracts/access/AccessControl.sol",
        paused: "contracts/interfaces/IAccessRestriction.sol",
        ifAdmin: "contracts/interfaces/IAccessRestriction.sol",
        ifAdminOrApprovedContract:
          "contracts/interfaces/IAccessRestriction.sol",
        ifAdminOrScript: "contracts/interfaces/IAccessRestriction.sol",
        ifApprovedContract: "contracts/interfaces/IAccessRestriction.sol",
        ifArbiter: "contracts/interfaces/IAccessRestriction.sol",
        ifDAO: "contracts/interfaces/IAccessRestriction.sol",
        ifDistributor: "contracts/interfaces/IAccessRestriction.sol",
        ifNotPaused: "contracts/interfaces/IAccessRestriction.sol",
        ifOwner: "contracts/interfaces/IAccessRestriction.sol",
        ifOwnerOrAdmin: "contracts/interfaces/IAccessRestriction.sol",
        ifPaused: "contracts/interfaces/IAccessRestriction.sol",
        ifScript: "contracts/interfaces/IAccessRestriction.sol",
        ifVerifiedUser: "contracts/interfaces/IAccessRestriction.sol",
        isAdmin: "contracts/interfaces/IAccessRestriction.sol",
        isApprovedContract: "contracts/interfaces/IAccessRestriction.sol",
        isArbiter: "contracts/interfaces/IAccessRestriction.sol",
        isDAO: "contracts/interfaces/IAccessRestriction.sol",
        isDistributor: "contracts/interfaces/IAccessRestriction.sol",
        isOwner: "contracts/interfaces/IAccessRestriction.sol",
        isScript: "contracts/interfaces/IAccessRestriction.sol",
        isVerifiedUser: "contracts/interfaces/IAccessRestriction.sol",
        pause: "contracts/interfaces/IAccessRestriction.sol",
        unpause: "contracts/interfaces/IAccessRestriction.sol",
      },
    },
    DisputeResolution: {
      address: "0x09635F643e140090A9A8Dcd712eD6285858ceBef",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "arbiter",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "agreementId",
              type: "uint256",
            },
          ],
          name: "ArbiterAlreadyVoted",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "agreementId",
              type: "uint256",
            },
          ],
          name: "DisputeAlreadyExists",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "available",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "required",
              type: "uint256",
            },
          ],
          name: "InsufficientBalance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "field",
              type: "string",
            },
          ],
          name: "InvalidAddress",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "param",
              type: "string",
            },
          ],
          name: "MustBeGraterThanZero",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "agreementId",
              type: "uint256",
            },
          ],
          name: "NoActiveDispute",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotAdmin",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotArbiter",
          type: "error",
        },
        {
          inputs: [],
          name: "NotAuthorized",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotOwner",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "agreementId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "arbiter",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "votedForRentee",
              type: "bool",
            },
          ],
          name: "ArbitersVoted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "agreementId",
              type: "uint256",
            },
          ],
          name: "DisputeInitiated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "agreementId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "winner",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "loser",
              type: "address",
            },
          ],
          name: "DisputeResolved",
          type: "event",
        },
        {
          inputs: [],
          name: "ARBITER_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "REPUTATION_PENALTY",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "VALIDATION_REVOCATION_THRESHOLD",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "VERFIED_USER_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "accessRestriction",
          outputs: [
            {
              internalType: "contract IAccessRestriction",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_arbiter",
              type: "address",
            },
          ],
          name: "addArbiter",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "disputes",
          outputs: [
            {
              internalType: "bool",
              name: "isActive",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "votesForRentee",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "votesForRenter",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_disputeId",
              type: "uint256",
            },
          ],
          name: "getDispute",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_rentalAgreement",
              type: "address",
            },
            {
              internalType: "address",
              name: "_reputation",
              type: "address",
            },
            {
              internalType: "address",
              name: "_accessRestriction",
              type: "address",
            },
          ],
          name: "init",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_agreementId",
              type: "uint256",
            },
          ],
          name: "initiateDispute",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_arbiter",
              type: "address",
            },
          ],
          name: "removeArbiter",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "rentalAgreement",
          outputs: [
            {
              internalType: "contract IRentalAgreement",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "reputation",
          outputs: [
            {
              internalType: "contract IReputation",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_agreementId",
              type: "uint256",
            },
          ],
          name: "resolveDispute",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_agreementId",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "_voteForRentee",
              type: "bool",
            },
          ],
          name: "voteOnDispute",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        addArbiter: "contracts/interfaces/IDisputeResolution.sol",
        getDispute: "contracts/interfaces/IDisputeResolution.sol",
        init: "contracts/interfaces/IDisputeResolution.sol",
        initiateDispute: "contracts/interfaces/IDisputeResolution.sol",
        removeArbiter: "contracts/interfaces/IDisputeResolution.sol",
        resolveDispute: "contracts/interfaces/IDisputeResolution.sol",
        voteOnDispute: "contracts/interfaces/IDisputeResolution.sol",
      },
    },
    Escrow: {
      address: "0x7a2088a1bFc9d81c55368AE168C2C02570cB814F",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_token",
              type: "address",
            },
            {
              internalType: "address",
              name: "_rentalDAO",
              type: "address",
            },
            {
              internalType: "address",
              name: "_accessRestriction",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "AllowanceError",
          type: "error",
        },
        {
          inputs: [],
          name: "Funds_already_locked",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "available",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "required",
              type: "uint256",
            },
          ],
          name: "InsufficientBalance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "field",
              type: "string",
            },
          ],
          name: "InvalidAddress",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "param",
              type: "string",
            },
          ],
          name: "MustBeGraterThanZero",
          type: "error",
        },
        {
          inputs: [],
          name: "No_deposit_to_refund",
          type: "error",
        },
        {
          inputs: [],
          name: "No_funds_locked_for_this_agreement",
          type: "error",
        },
        {
          inputs: [],
          name: "No_funds_to_release",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotAdmin",
          type: "error",
        },
        {
          inputs: [],
          name: "NotAuthorized",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotOwner",
          type: "error",
        },
        {
          inputs: [],
          name: "Renter_already_confirmed",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "agreementId",
              type: "uint256",
            },
          ],
          name: "DepositRefunded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "agreementId",
              type: "uint256",
            },
          ],
          name: "FundsLocked",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "agreementId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "recipient",
              type: "address",
            },
          ],
          name: "FundsReleased",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "agreementId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "RevenueDistributed",
          type: "event",
        },
        {
          inputs: [],
          name: "accessRestriction",
          outputs: [
            {
              internalType: "contract IAccessRestriction",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "agreementEarnings",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_agreementId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_deposit",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_cost",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_rentee",
              type: "address",
            },
            {
              internalType: "address",
              name: "_renter",
              type: "address",
            },
          ],
          name: "distributeRevenue",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "escrows",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_agreementId",
              type: "uint256",
            },
          ],
          name: "getEarnings",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_renter",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_agreementId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_deposit",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_cost",
              type: "uint256",
            },
          ],
          name: "lockFunds",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_agreementId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_deposit",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_cost",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_rentee",
              type: "address",
            },
            {
              internalType: "address",
              name: "_renter",
              type: "address",
            },
          ],
          name: "refundDeposit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "rentalDAO",
          outputs: [
            {
              internalType: "contract IRentalDAO",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "token",
          outputs: [
            {
              internalType: "contract IERC20",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        agreementEarnings: "contracts/interfaces/IEscrow.sol",
        distributeRevenue: "contracts/interfaces/IEscrow.sol",
        getEarnings: "contracts/interfaces/IEscrow.sol",
        lockFunds: "contracts/interfaces/IEscrow.sol",
        refundDeposit: "contracts/interfaces/IEscrow.sol",
      },
    },
    Inspection: {
      address: "0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_accessRestriction",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "agreementId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "passed",
              type: "bool",
            },
          ],
          name: "ItemInspected",
          type: "event",
        },
        {
          inputs: [],
          name: "accessRestriction",
          outputs: [
            {
              internalType: "contract IAccessRestriction",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_agreementId",
              type: "uint256",
            },
          ],
          name: "inspectItem",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "inspectionResults",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        inspectItem: "contracts/interfaces/IInspection.sol",
        inspectionResults: "contracts/interfaces/IInspection.sol",
      },
    },
    MockToken: {
      address: "0x59b670e9fA9D0A427751Af201D676719a970857b",
      abi: [
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
            {
              internalType: "string",
              name: "_symbol",
              type: "string",
            },
            {
              internalType: "address",
              name: "_accessRestriction",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [],
          name: "accessRestriction",
          outputs: [
            {
              internalType: "contract IAccessRestriction",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "subtractedValue",
              type: "uint256",
            },
          ],
          name: "decreaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "addedValue",
              type: "uint256",
            },
          ],
          name: "increaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "mint",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        allowance: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        approve: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        balanceOf: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        decimals: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        decreaseAllowance: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        increaseAllowance: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        name: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        symbol: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        totalSupply: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        transfer: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        transferFrom: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
      },
    },
    RentalAgreement: {
      address: "0xc5a5C42992dECbae36851359345FE25997F5C42d",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_token",
              type: "address",
            },
            {
              internalType: "address",
              name: "_escrow",
              type: "address",
            },
            {
              internalType: "address",
              name: "_inspection",
              type: "address",
            },
            {
              internalType: "address",
              name: "_disputeResolution",
              type: "address",
            },
            {
              internalType: "address",
              name: "_socialFi",
              type: "address",
            },
            {
              internalType: "address",
              name: "_accessRestriction",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "AgreementNotActive",
          type: "error",
        },
        {
          inputs: [],
          name: "AssetIsNotActive",
          type: "error",
        },
        {
          inputs: [],
          name: "Asset_is_not_active",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bool",
              name: "itemCondition",
              type: "bool",
            },
            {
              internalType: "address",
              name: "rentee",
              type: "address",
            },
            {
              internalType: "address",
              name: "renter",
              type: "address",
            },
          ],
          name: "InspectionFailed",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "available",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "required",
              type: "uint256",
            },
          ],
          name: "InsufficientBalance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "field",
              type: "string",
            },
          ],
          name: "InvalidAddress",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidAgreement",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "daoAddress",
              type: "address",
            },
          ],
          name: "InvalidDAOAddress",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "param",
              type: "string",
            },
          ],
          name: "MustBeGraterThanZero",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotAdmin",
          type: "error",
        },
        {
          inputs: [],
          name: "NotAuthorized",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotVerifiedUser",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "currentTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "endTime",
              type: "uint256",
            },
          ],
          name: "RentalPeriodNotOver",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "UserNotVerified",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "agreementId",
              type: "uint256",
            },
          ],
          name: "AgreementCancelled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "agreementId",
              type: "uint256",
            },
          ],
          name: "AgreementCompleted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "agreementId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "collection",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "rentee",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "renter",
              type: "address",
            },
          ],
          name: "AgreementCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "_agreementId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "_rentalPeriod",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "_newCost",
              type: "uint256",
            },
          ],
          name: "AgreementExtendedRentee",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "_agreementId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "_rentalPeriod",
              type: "uint256",
            },
          ],
          name: "AgreementExtendedRenter",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "agreementId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "rentee",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "renter",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "arrivalTime",
              type: "uint256",
            },
          ],
          name: "ArrivalAgreementEvent",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "agreementId",
              type: "uint256",
            },
          ],
          name: "DisputeRaised",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "collection",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "isActive",
              type: "bool",
            },
          ],
          name: "RentalAsset1155Added",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "UserAdded",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_agreementId",
              type: "uint256",
            },
          ],
          name: "ArrivalAgreement",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "VERFIED_USER_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "accessRestriction",
          outputs: [
            {
              internalType: "contract IAccessRestriction",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
          name: "addUser",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "agreementCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "agreements",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "userAddress",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "validationTime",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "isValidated",
                  type: "bool",
                },
                {
                  internalType: "uint256",
                  name: "reputationScore",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "joinTime",
                  type: "uint256",
                },
              ],
              internalType: "struct IRentalAgreement.User",
              name: "rentee",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "userAddress",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "validationTime",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "isValidated",
                  type: "bool",
                },
                {
                  internalType: "uint256",
                  name: "reputationScore",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "joinTime",
                  type: "uint256",
                },
              ],
              internalType: "struct IRentalAgreement.User",
              name: "renter",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "assetType",
                  type: "string",
                },
                {
                  internalType: "bool",
                  name: "isActive",
                  type: "bool",
                },
                {
                  internalType: "uint256",
                  name: "timesRented",
                  type: "uint256",
                },
              ],
              internalType: "struct IRentalAgreement.Asset",
              name: "asset",
              type: "tuple",
            },
            {
              internalType: "uint256",
              name: "rentalPeriod",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "cost",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "deposit",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "registrationTime",
              type: "uint256",
            },
            {
              internalType: "enum IRentalAgreement.AgreementStatus",
              name: "status",
              type: "uint8",
            },
            {
              internalType: "bool",
              name: "isDisputed",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_agreementId",
              type: "uint256",
            },
          ],
          name: "cancelAgreement",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_agreementId",
              type: "uint256",
            },
          ],
          name: "completeAgreement",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_collection",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_tokenId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_rentalPeriod",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_cost",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_deposit",
              type: "uint256",
            },
          ],
          name: "createAgreement",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "disputeResolution",
          outputs: [
            {
              internalType: "contract IDisputeResolution",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "escrow",
          outputs: [
            {
              internalType: "contract IEscrow",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_agreementId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_additionalPeriod",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_newCost",
              type: "uint256",
            },
          ],
          name: "extendRentalPeriodRentee",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_agreementId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_additionalPeriod",
              type: "uint256",
            },
          ],
          name: "extendRentalPeriodRenter",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_agreementId",
              type: "uint256",
            },
          ],
          name: "getAgreementParties",
          outputs: [
            {
              internalType: "address",
              name: "rentee",
              type: "address",
            },
            {
              internalType: "address",
              name: "renter",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "inspection",
          outputs: [
            {
              internalType: "contract IInspection",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_agreementId",
              type: "uint256",
            },
          ],
          name: "raiseDispute",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "rentalAsset1155s",
          outputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "assetType",
              type: "string",
            },
            {
              internalType: "bool",
              name: "isActive",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "timesRented",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_collection",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_tokenId",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "_isActive",
              type: "bool",
            },
          ],
          name: "setRentalAsset1155",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "socialFi",
          outputs: [
            {
              internalType: "contract ISocialFi",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "token",
          outputs: [
            {
              internalType: "contract IERC20",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "users",
          outputs: [
            {
              internalType: "address",
              name: "userAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "validationTime",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isValidated",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "reputationScore",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "joinTime",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        ArrivalAgreement: "contracts/interfaces/IRentalAgreement.sol",
        addUser: "contracts/interfaces/IRentalAgreement.sol",
        agreements: "contracts/interfaces/IRentalAgreement.sol",
        cancelAgreement: "contracts/interfaces/IRentalAgreement.sol",
        completeAgreement: "contracts/interfaces/IRentalAgreement.sol",
        createAgreement: "contracts/interfaces/IRentalAgreement.sol",
        extendRentalPeriodRentee: "contracts/interfaces/IRentalAgreement.sol",
        extendRentalPeriodRenter: "contracts/interfaces/IRentalAgreement.sol",
        getAgreementParties: "contracts/interfaces/IRentalAgreement.sol",
        raiseDispute: "contracts/interfaces/IRentalAgreement.sol",
        rentalAsset1155s: "contracts/interfaces/IRentalAgreement.sol",
        setRentalAsset1155: "contracts/interfaces/IRentalAgreement.sol",
        users: "contracts/interfaces/IRentalAgreement.sol",
      },
    },
    RentalDAO: {
      address: "0x4A679253410272dd5232B3Ff7cF5dbB88f295319",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_accessRestriction",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_initialFee",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "fee",
              type: "uint256",
            },
          ],
          name: "FeeExceedsMaximum",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "available",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "required",
              type: "uint256",
            },
          ],
          name: "InsufficientBalance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "field",
              type: "string",
            },
          ],
          name: "InvalidAddress",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "param",
              type: "string",
            },
          ],
          name: "MustBeGraterThanZero",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotAdmin",
          type: "error",
        },
        {
          inputs: [],
          name: "NotAuthorized",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotDAO",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotOwner",
          type: "error",
        },
        {
          inputs: [],
          name: "OnlyAdmin",
          type: "error",
        },
        {
          inputs: [],
          name: "Unauthorized",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "string",
              name: "contractName",
              type: "string",
            },
            {
              indexed: false,
              internalType: "address",
              name: "newAddress",
              type: "address",
            },
          ],
          name: "ContractAddressUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "recipient",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "FeesWithdrawn",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "oldFee",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "newFee",
              type: "uint256",
            },
          ],
          name: "SystemFeeUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "recipient",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "Withdrawn",
          type: "event",
        },
        {
          inputs: [],
          name: "DAO_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "MAX_FEE",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "accessRestriction",
          outputs: [
            {
              internalType: "contract IAccessRestriction",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_member",
              type: "address",
            },
          ],
          name: "addDAOMember",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_contractName",
              type: "string",
            },
          ],
          name: "getContractAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getSystemFee",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_newFee",
              type: "uint256",
            },
          ],
          name: "proposeAndUpdateSystemFee",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_member",
              type: "address",
            },
          ],
          name: "removeDAOMember",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_contractName",
              type: "string",
            },
            {
              internalType: "address",
              name: "_contractAddress",
              type: "address",
            },
          ],
          name: "setContractAddress",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "systemFee",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address payable",
              name: "_recipient",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "withdrawFees",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        addDAOMember: "contracts/interfaces/IRentalDAO.sol",
        getContractAddress: "contracts/interfaces/IRentalDAO.sol",
        getSystemFee: "contracts/interfaces/IRentalDAO.sol",
        proposeAndUpdateSystemFee: "contracts/interfaces/IRentalDAO.sol",
        removeDAOMember: "contracts/interfaces/IRentalDAO.sol",
        withdrawFees: "contracts/interfaces/IRentalDAO.sol",
      },
    },
    Reputation: {
      address: "0x4ed7c70F96B99c776995fB64377f0d4aB3B0e1C1",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_accessRestriction",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "available",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "required",
              type: "uint256",
            },
          ],
          name: "InsufficientBalance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "field",
              type: "string",
            },
          ],
          name: "InvalidAddress",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "updater",
              type: "address",
            },
          ],
          name: "InvalidUpdaterAddress",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "param",
              type: "string",
            },
          ],
          name: "MustBeGraterThanZero",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotAdmin",
          type: "error",
        },
        {
          inputs: [],
          name: "NotAuthorized",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotOwner",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "agreementId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "int256",
              name: "change",
              type: "int256",
            },
            {
              indexed: false,
              internalType: "int256",
              name: "newScore",
              type: "int256",
            },
          ],
          name: "ReputationUpdated",
          type: "event",
        },
        {
          inputs: [],
          name: "UPDATER_ROLE",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "accessRestriction",
          outputs: [
            {
              internalType: "contract IAccessRestriction",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
          name: "getReputation",
          outputs: [
            {
              internalType: "int256",
              name: "",
              type: "int256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "reputationScores",
          outputs: [
            {
              internalType: "int256",
              name: "",
              type: "int256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_agreementId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
            {
              internalType: "int256",
              name: "_change",
              type: "int256",
            },
          ],
          name: "updateReputation",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        getReputation: "contracts/interfaces/IReputation.sol",
        updateReputation: "contracts/interfaces/IReputation.sol",
      },
    },
    SocialFi: {
      address: "0x322813Fd9A801c5507c9de605d63CEA4f2CE6c44",
      abi: [
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "_token",
              type: "address",
            },
            {
              internalType: "address",
              name: "_accessRestriction",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "available",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "required",
              type: "uint256",
            },
          ],
          name: "InsufficientBalance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "field",
              type: "string",
            },
          ],
          name: "InvalidAddress",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "param",
              type: "string",
            },
          ],
          name: "MustBeGraterThanZero",
          type: "error",
        },
        {
          inputs: [],
          name: "NoRewardsToClaim",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotAdmin",
          type: "error",
        },
        {
          inputs: [],
          name: "NotAuthorized",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "NotOwner",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "recipiant",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "RewardClaimed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "UserRewarded",
          type: "event",
        },
        {
          inputs: [],
          name: "accessRestriction",
          outputs: [
            {
              internalType: "contract IAccessRestriction",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "claimRewards",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
          name: "getRewardBalance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "rewardUser",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "rewards",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "token",
          outputs: [
            {
              internalType: "contract IERC20",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        claimRewards: "contracts/interfaces/ISocialFi.sol",
        getRewardBalance: "contracts/interfaces/ISocialFi.sol",
        rewardUser: "contracts/interfaces/ISocialFi.sol",
      },
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
